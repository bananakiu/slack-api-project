{"version":3,"sources":["components/common/ErrorDisplay.jsx","components/Assets/Fireside.png","components/login/Login.jsx","components/login/Signup.jsx","components/userDashboard/SidebarRow.jsx","components/userDashboard/SideBarList.jsx","components/common/Modal.jsx","components/userDashboard/CreateNewChannelForm.jsx","components/userDashboard/ChatBox.jsx","components/userDashboard/Chat.jsx","assets/default_dp.png","components/userDashboard/UserProfile.jsx","components/userDashboard/AddMemberForm.jsx","components/userDashboard/AddDirectMessage.jsx","components/userDashboard/UserDashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorDisplay","errors","id","className","map","error","index","Login","useForm","register","handleSubmit","useState","setErrors","useContext","StatesContext","setLoginUser","setLoginHeaders","openPage","handleErrors","loggedInUser","errorList","onSubmit","data","email","password","axios","post","API","then","response","headers","catch","console","log","undefined","push","length","src","Fireside","type","placeholder","name","href","onClick","rel","target","title","Signup","createdUser","password_confirmation","method","url","full_messages","alert","htmlFor","SidebarRow","props","setCurrentChatName","currentChatName","currentChatId","setCurrentChatId","setCurrentChatType","currentChatType","setCurrentChatMembers","currentChatMembers","allChannelsDetails","setShowAddMemberForm","thisChannelMembers","filter","channel","channel_members","memberObj","user_id","handleClick","children","SideBarList","allChannels","setShowCreateChannelForm","showAddButton","setShowAddButton","onMouseOver","onMouseOut","displayAllAvailableChannels","Modal","useEffect","close","e","key","closeModal","window","addEventListener","removeEventListener","closeModalFunction","setShowModal","onFocus","currentTarget","tabIndex","xmlns","width","height","fill","viewBox","d","CreateNewChannelForm","control","loginUser","loginHeaders","allUsers","setAllChannels","setAllChannelsDetails","allUsersOptions","indivUser","value","label","uid","user_ids","createdChannel","option","client","expiry","getAllChannels","getAllChannelsDetails","autoFocus","required","isClearable","render","field","options","isMulti","isSearchable","ChatBox","setAllMessages","reset","createdMessage","message","retrieveAllMessages","autoComplete","retrieveMessages","Chat","allMessages","sender","replaceAll","body","UserProfile","DefaultPhoto","alt","AddMemberForm","setOptions","includes","memberToAdd","member_id","memberId","memberDetails","user","searchMember","AddDirectMessage","answer","setAnswer","menuPlacement","onChange","allAvailableChannels","channelData","channelDetailsList","forEach","UserDashboard","setAllUsers","showCreateChannelForm","showAddMemberForm","setTimeout","thisChannelDetails","React","createContext","App","isOpenLoginPage","setIsOpenLoginPage","isOpenSignUpPage","setIsOpenSignUpPage","isOpenUserDashboard","setIsOpenUserDashboard","Provider","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2e8e388.chunk.js","sourcesContent":["const ErrorDisplay = ({\n    errors,\n}) => {\n    return <div id=\"errors-display\" className=\"border-2 rounded-md border-red-600 py-2 px-3 text-red-600 text-left mb-3 w-full\">\n        <h1 className=\"text-lg font-bold\">Error</h1>\n        <ol className=\"text-sm text-justify list-disc list-inside\">\n            {errors.map((error, index) =>\n                <li key={index} className=\"pt-1\">{error}</li>\n            )}\n        </ol>\n    </div>\n};\n\nexport default ErrorDisplay;","export default __webpack_public_path__ + \"static/media/Fireside.8027bf54.png\";","import axios from \"axios\";\nimport { API } from '../../App'\nimport { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ErrorDisplay from \"../common/ErrorDisplay\";\nimport { StatesContext } from \"../../App\";\nimport Fireside from '../Assets/Fireside.png';\n\nconst Login = () => {\n  const { register, handleSubmit } = useForm();\n  const [ errors, setErrors ] = useState([]);\n\n  const { \n    setLoginUser,\n    setLoginHeaders,\n    openPage\n  } = useContext(StatesContext);\n\n  const onSubmit = (data) => {\n    let errorList = [];\n\n    // create user obj\n    let loggedInUser = {\n      \"email\": data.email,\n      \"password\": data.password,\n    }\n\n    // handle errors\n    errorList = handleErrors(loggedInUser, errorList);\n\n    // POST to server\n    axios.post(\n      `${API}/api/v1/auth/sign_in`,\n      loggedInUser,\n    ).then((response) => {\n      // save headers\n      setLoginUser(response.data.data);\n      setLoginHeaders(response.headers);\n    }).catch((error) => {\n      console.log(error);\n      // console.error(error.response.data.errors); // ! TEMP\n      if (error?.response?.data?.errors !== undefined) {\n        errorList.push(...error?.response?.data?.errors);\n        setErrors(errorList);\n      }\n    }).then(() => {\n      if (errorList.length === 0) {\n        // login (change visible components)\n        openPage(\"dashboard\");\n      }\n    })\n  }\n\n  const handleErrors = (loggedInUser, errorList) => {\n    // if (createdUser.password.length < 6) {\n    //   errorList.push(\"Password must be at least 6 characters long.\");\n    // }\n\n    // if (createdUser.password_confirmation !== createdUser.password) {\n    //   errorList.push(\"Password and confirm password do not match.\")\n    // }\n\n    return errorList;\n  }\n\n\nreturn (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"bg-gradient-to-b from-purple-300 to-purple-500 min-h-screen\n      flex justify-center items-center\n      \">\n        {/* welcome message */}\n        <div className=\"hidden lg:flex flex-col self-center p-10 sm:max-w-5xl xl:max-w-2xl\">\n          <div className=\"-mt-12 self-start hidden lg:flex flex-col  text-black\">\n            <h1 className=\"mb-3 font-bold text-6xl\">Hi, there! 👋</h1>\n            <h1 className=\"ml-1 mt-2 mb-2 font-bold text-2xl\">Welcome back to Fireside.</h1>\n            <p className=\"mt-2 mr-32 text-gray-800 text-1xl font-semibold\">\n              We're looking forward to hearing your stories.\n            </p>\n          </div>\n        </div>\n\n        {/* form proper */}\n        <div className=\"flex justify-center self-center\">\n          <div className=\"p-12 bg-white mx-auto rounded-2xl w-100 \">\n            <div className=\"flex flex-col items-center justify-center align-center mb-5\">\n              <div className=\"mb-1 h-14 w-14\"> \n                <img src={Fireside}/>\n              </div>\n              <p className=\"mt-1 italic text-gray-500 text-center\">\n                \"A chat a day, keeps the loneliness away\"\n              </p>\n              {errors.length > 0 &&\n                <div className=\"mt-3 -mb-4\">\n                  <ErrorDisplay errors={errors}/>\n                </div>\n              }\n            </div>\n            <div className=\"space-y-5\">\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                  Email Address\n                </label>\n                <input\n                  {...register(\"email\")}\n                  className=\" w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400\"\n                  type=\"\"\n                  placeholder=\"johndoe@gmail.com\"\n                ></input>\n              </div>\n              <div className=\"space-y-2\">\n                <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                  Password\n                </label>\n                <input\n                  {...register(\"password\")}\n                  className=\"w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                ></input>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"remember_me\"\n                    name=\"remember_me\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 focus:ring-blue-400 border-gray-300 rounded cursor-pointer\"\n                  ></input>\n                  <label className=\"ml-2 block text-sm text-gray-800\">\n                    Remember me\n                  </label>\n                </div>\n                <div className=\"text-sm\">\n                  <a href=\"#\" className=\"text-purple-600 hover:text-purple-700\">\n                    Forgot your password?\n                  </a>\n                </div>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"-mb-7 w-full flex justify-center bg-purple-600  hover:bg-purple-800 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500\"\n                >\n                  Login\n                </button>\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-center mt-10 text-center text-md text-gray-500\">\n              <span className=\"mt-2\">Don't have an account?</span>\n              <br />\n              <a\n                href=\"#\"\n                className=\"-mt-5 font-bold text-indigo-500 hover:text-indigo-600 no-underline hover:underline cursor-pointer transition ease-in duration-300\"\n                onClick={() => openPage(\"signup\")}\n              >\n                Sign up\n              </a>\n            </div>\n            <div className=\"pt-5 text-center text-gray-400 text-xs\">\n              <span>\n                Copyright © 2021-2022\n                <a\n                  href=\"\"\n                  rel=\"\"\n                  target=\"_blank\"\n                  title=\"\"\n                  className=\"text-green hover:text-green-500 \"\n                ></a>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n)};\n\nexport default Login;","import axios from 'axios';\nimport { API } from '../../App';\nimport { useState, useEffect, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport ErrorDisplay from '../common/ErrorDisplay';\nimport { StatesContext } from '../../App';\nimport Fireside from '../Assets/Fireside.png';\n\nconst Signup = () => {\n  const { register, handleSubmit } = useForm();\n  const [ errors, setErrors ] = useState([]);\n\n  const { \n    setLoginUser,\n    setLoginHeaders,\n    openPage\n  } = useContext(StatesContext);\n\n  const onSubmit = (data) => {\n    let errorList = [];\n\n    // create user obj\n    let createdUser = {\n      email: data.email,\n      password: data.password,\n      password_confirmation: data.password_confirmation,\n    };\n\n    // handle errors\n    errorList = handleErrors(createdUser, errorList);\n\n    // POST to server\n    axios({\n      method: 'POST',\n      url: `${API}/api/v1/auth/`,\n      data: createdUser,\n    }).then((response) => {\n      // console.log(response); // ! TEMP\n      // set headers\n      setLoginUser(response.data.data)\n      setLoginHeaders(response.headers);\n    }).catch((error) => {\n      // console.log(error?.response?.data?.errors?.full_messages) // ! TEMP\n      errorList.push(...error?.response?.data?.errors?.full_messages);\n      setErrors(errorList);\n    }).then(() => {\n      if (errorList.length === 0) {\n        // show relevant pages\n        openPage(\"dashboard\");\n\n        // ! TEMP: alert (turn into nicer alerts)\n        alert('User successfully created! You are logged in!');\n      }\n    });\n  };\n\n  const handleErrors = (createdUser, errorList) => {\n    // if (createdUser.password.length < 6) {\n    //   errorList.push(\"Password must be at least 6 characters long.\");\n    // }\n\n    // if (createdUser.password_confirmation !== createdUser.password) {\n    //   errorList.push(\"Password and confirm password do not match.\")\n    // }\n\n    return errorList;\n  };\n\n  return <>\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div className=\"bg-gradient-to-b from-purple-300 to-purple-500 min-h-screen\n      flex justify-center items-center\n      \">\n        {/* welcome message */}\n        <div className=\"hidden xl:flex flex-col self-center p-10 sm:max-w-5xl xl:max-w-2xl\">\n          <div className=\"-mt-12 self-start hidden lg:flex flex-col  text-black\">\n            <h1 className=\"mb-3 font-bold text-5xl\">Thanks for the interest in our app! 🙏</h1>\n            <h1 className=\"ml-1 mt-2 mb-2 font-bold text-2xl\">It seems like you haven't registered...</h1>\n            <p className=\"mt-2 mr-32 text-gray-800 text-1xl font-semibold\">\n              Please do register in the form found on the right to hop right in Fireside!\n            </p>\n          </div>\n      </div>\n\n      {/* form proper */}\n      <div className=\"flex justify-center self-center\">\n        <div className=\"p-12 bg-white mx-auto rounded-2xl w-100 \">\n          <div className=\"flex flex-col items-center justify-center align-center mb-5\">\n            <div className=\"mb-1 h-14 w-14\"> \n              <img src={Fireside}/>\n            </div>\n            <p className=\"mt-1 italic text-gray-500 text-center\">\n              “Life is either a daring adventure or nothing at all.”\n            </p>\n            {errors.length > 0 &&\n              <div className=\"mt-3 -mb-4\">\n                <ErrorDisplay errors={errors}/>\n              </div>\n            }\n          </div>\n          <div className=\"space-y-5\">\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                Email Address\n              </label>\n              <input\n                {...register(\"email\")}\n                className=\" w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400\"\n                type=\"email\"\n                placeholder=\"johndoe@gmail.com\"\n              ></input>\n            </div>\n            <div className=\"space-y-2\">\n              <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                Password\n              </label>\n              <input\n                {...register(\"password\")}\n                className=\"w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n              ></input>\n            </div>\n            <div className=\"space-y-2\">\n              <label htmlFor='password_confirmation' className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                Confirm Password\n              </label>\n              <input\n              {...register('password_confirmation')}\n              className=\"w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400\"\n              type='password'\n              placeholder='Please retype your password'></input>\n            </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className=\"mt-7 -mb-7 w-full flex justify-center bg-purple-600  hover:bg-purple-800 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500\"\n              >\n                Create\n              </button>\n            </div>\n            <div className=\"flex flex-col items-center justify-center mt-10 text-center text-md text-gray-500\">\n              <a\n                href=\"#\"\n                className=\"mt-5 font-bold text-indigo-500 hover:text-indigo-600 no-underline hover:underline cursor-pointer transition ease-in duration-300\"\n                onClick={() => openPage(\"login\")}\n              >\n                Already have an account?\n              </a>\n            </div>\n            <div className=\"pt-5 text-center text-gray-400 text-xs\">\n            <span>\n              Copyright © 2021-2022\n              <a\n                href=\"\"\n                rel=\"\"\n                target=\"_blank\"\n                title=\"\"\n                className=\"text-green hover:text-green-500 \"\n              ></a>\n            </span>\n            </div>\n          </div>\n        </div>\n      </div>\n  </form>\n</>};\n\nexport default Signup;\n\n/* <h1\nclassName='\nself-start\ntext-2xl font-bold\nmb-2\n'\n>\nSign Up\n</h1>\n{errors.length > 0 && (\n<div\n  className='\nflex flex-col justify-center items-center\nw-full mb-4\n'\n>\n  <ErrorDisplay errors={errors} />\n</div>\n)}\n<div\nclassName='\nflex flex-col justify-center items-center\nmb-4\nw-full\n'\n>\n<label htmlFor='email' className='self-start'>\n  Email\n</label>\n<input\n  {...register('email')}\n  type='email'\n  placeholder='Email'\n  className='\nrounded-md\nw-full\n'\n/>\n</div>\n<div\nclassName='\nflex flex-col justify-center items-center\nw-full mb-4\n'\n>\n<label htmlFor='password' className='self-start'>\n  Password\n</label>\n<input\n  {...register('password')}\n  type='password'\n  placeholder='Password'\n  className='\nrounded-md\nw-full\n'\n/>\n</div>\n<div\nclassName='\nflex flex-col justify-center items-center\nw-full mb-4\n'\n>\n<label htmlFor='password_confirmation' className='self-start'>\n  Confirm Password\n</label>\n<input\n  {...register('password_confirmation')}\n  type='password'\n  placeholder='Password'\n  className='\nrounded-md\nw-full\n'\n/>\n</div>\n\n<div\nclassName='\nflex justify-between items-center\nw-full\n'\n>\n<button\n  className='\npy-2 px-4 mt-2 rounded\nbg-blue-500 hover:bg-blue-700\ntext-white font-bold\n'\n>\n  Create\n</button>\n<div\n  className='\ntext-blue-500 hover:text-blue-700\nfont-bold text-sm\ncursor-pointer\n'\n  onClick={() => openPage('login')}\n>\n  Already have an account?\n</div>\n</div> */","import React, { useContext } from 'react';\nimport { StatesContext } from '../../App';\n\nfunction SidebarRow(props) {\n    const { \n        currentChatName,\n        setCurrentChatName,\n        currentChatId,\n        setCurrentChatId,\n        currentChatType,\n        setCurrentChatType,\n        currentChatMembers,\n        setCurrentChatMembers,\n        allChannelsDetails,\n        setShowAddMemberForm,\n    } = useContext(StatesContext);\n\n    const handleClick = () => {\n        // save channel members\n        let thisChannelDetails = allChannelsDetails.filter(channel => channel.id === props.channel.id)[0];\n        let thisChannelMembers = thisChannelDetails.channel_members.map(memberObj => memberObj.user_id);\n\n        // save channel details\n        setCurrentChatName(props.channel.name);\n        setCurrentChatId(props.channel.id);\n        setCurrentChatType(\"Channel\");\n        setCurrentChatMembers(thisChannelMembers);\n    }\n\n    return (\n        <div onClick={() => handleClick()}\n        className={`\n        flex justify-between align-center\n        my-1 py-1 px-3\n        bg-gray-100\n        rounded-md\n        hover:bg-gray-200 cursor-pointer ${props.channel.id===currentChatId ? \"bg-gray-300 hover:bg-gray-300\" : \"\"}\n        transition duration-200\n        `}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default SidebarRow;\n","import SidebarRow from './SidebarRow';\nimport React, { useState, useContext } from 'react';\nimport { StatesContext } from '../../App';\n\nconst SideBarList = () => {\n    const {\n        allChannels,\n        setShowCreateChannelForm,\n    } = useContext(StatesContext);\n\n    const [showAddButton, setShowAddButton] = useState(false);\n\n    const displayAllAvailableChannels = (allChannels) => {    \n        if (allChannels !== undefined && allChannels.length > 0) {\n            return (\n                allChannels.map((channel, index) => {\n                    return(\n                        <SidebarRow\n                            key={index}\n                            channel={channel}\n                        >\n                            {channel.name}\n                        </SidebarRow>\n                    )\n                })\n            )\n        } else {\n            return (<h3>No available channels yet</h3>)\n        }\n    }\n        return (\n            <div className=\"\n            flex flex-col flex-grow min-h-0 mb-1\n            \">\n                <h1\n                onMouseOver={() => setShowAddButton(true)}\n                onMouseOut={() => setShowAddButton(false)}\n                onClick={() => setShowCreateChannelForm(true)}\n                className=\"\n                font-semibold text-lg py-2\n                cursor-pointer\n                \">\n                    Channels <span className={showAddButton ? \"text-xl\": \"text-gray-300 text-xl\"}>+</span>\n                </h1>\n                <ul className=\"flex flex-col overflow-y-auto\">\n                    {displayAllAvailableChannels(allChannels)}\n                    {/* add channels button */}\n                    <button type=\"button\" onClick={() => setShowCreateChannelForm(true)} className=\"\n                    flex items-center justify-start\n                    my-1 py-1 px-3\n                    bg-purple-700 hover:bg-purple-800 text-white\n                    rounded-md\n                    transition duration-200 cursor-pointer\n                    \">\n                        <div className=\"\">+</div>\n                        <div className=\"ml-2\">Add channels</div>\n                    </button>\n                </ul>\n            </div>\n        )\n    }\n\n\nexport default SideBarList;","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\n\nfunction Modal(props) {\n    // close modal upon pressing ESC key\n    useEffect(() => {\n        const close = (e) => {\n            if(e.key === \"Escape\"){\n                closeModal();\n            }\n        }\n\n        window.addEventListener('keydown', close);\n\n        return () => window.removeEventListener('keydown', close);\n    }, [])\n\n    const closeModal = () => {\n        // run custom function\n        if (props?.closeModalFunction !== undefined) {\n            props.closeModalFunction();\n        }\n\n        // close modal\n        props.setShowModal(false);\n    }\n\n    // close model when background is clicked\n    const handleClickFocus = (e) => {\n        if (e.currentTarget === e.target) {\n            closeModal();\n        }\n    }\n\n    // render\n    return <>\n        <div onFocus={handleClickFocus} tabIndex=\"-1\" className={`\n        h-screen w-full fixed z-20 inset-0 overflow-y-auto\n        flex justify-center items-center text-center\n        bg-black bg-opacity-50\n        `}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\" className=\"\n            fixed z-30 top-0 right-0\n            mr-5 mt-3\n            hover:text-white\n            \">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n            {props.children}\n        </div>\n    </>\n}\n\n// TODO: currently doesn't work. Will fix this in future versions\nModal.propTypes = {\n    closeModalFunction: PropTypes.func,\n    setShowModal: PropTypes.func.isRequired,\n};\n\nexport default Modal\n","import React, { useState, useContext } from 'react';\nimport Modal from '../common/Modal';\nimport ErrorDisplay from '../common/ErrorDisplay';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport { API, StatesContext } from '../../App';\nimport {getAllChannelsDetails, getAllChannels} from '../userDashboard/UserDashboard';\n\n// TODO: change style of react-select selector\n\nconst CreateNewChannelForm = () => {\n    const { register, handleSubmit, control } = useForm();\n    const [ errors, setErrors ] = useState([]);\n\n    const { \n        loginUser,\n        loginHeaders,\n        allUsers,\n        setShowCreateChannelForm,\n        setAllChannels,\n        setAllChannelsDetails,\n    } = useContext(StatesContext);\n    \n    const onSubmit = (data) => {\n        if(data?.user_ids !== undefined && data?.user_ids !== undefined) {\n\n            let errorList = [];\n        \n            // create channel obj\n            let createdChannel = {\n                name: data.name,\n                // user_ids: data.user_ids.map(option => option.value),\n                user_ids: [loginUser.id, ...data.user_ids.map(option => option.value)],\n            }\n            \n            // POST to server\n            axios({\n                method: \"POST\",\n                url: `${API}/api/v1/channels`,\n                data: createdChannel,\n                headers: {\n                    \"access-token\": loginHeaders[\"access-token\"],\n                    client: loginHeaders.client,\n                    expiry: loginHeaders.expiry,\n                    uid: loginHeaders.uid,\n                },\n            }).then((response) => {\n                // ! TEMP: while the API doesn't work the way it should,\n                if (response.data?.errors && response.data.errors.length > 0) {\n                    errorList.push(...response.data.errors);\n                    setErrors(errorList);\n                }\n            }).catch((error) => {\n                console.error(error.response.data.errors); // ! TEMP\n                errorList.push(...error.response.data.errors);\n                setErrors(errorList);\n            }).then(() => {\n                if (errorList.length === 0) {\n                    // ! TEMP: alert (turn into nicer alerts)\n                    alert(\"Channel created!\");\n\n                    // trigger updating channels in app\n                    getAllChannels(loginHeaders, setAllChannels, getAllChannelsDetails, setAllChannelsDetails)\n            \n                    // close modal\n                    setShowCreateChannelForm(false);\n                }\n            })\n        }\n    }\n\n    // preprocessing form inputs\n    let allUsersOptions = allUsers.map((indivUser) => {\n        return {\n            value: indivUser.id,\n            label: `${indivUser.uid}`,\n        }\n    })\n\n    allUsersOptions = allUsersOptions.filter((indivUser) => indivUser.value !== loginUser.id);\n\n    // render\n    return (\n        <Modal setShowModal={setShowCreateChannelForm}>\n            <form onSubmit={handleSubmit(onSubmit)} tabIndex=\"-1\" className=\"\n            py-4 px-6\n            border-gray-150 border-2 rounded-lg\n            transition duration-200\n            bg-white\n            w-96 lg:w-4/12\n            \">\n                <h1 className=\"\n                self-start text-left\n                text-2xl font-bold\n                mb-2\n                \">\n                    Create an channel\n                </h1>\n                <p className=\"\n                self-start text-left\n                text-m text-gray-500\n                mb-4\n                \">\n                    Channels are where your team communicates. They’re best when organized around a topic — #marketing, for example.\n                </p>\n                {errors.length>0 &&\n                    <div className=\"\n                    flex flex-col justify-center items-center\n                    w-full mb-4\n                    \">\n                        <ErrorDisplay errors={errors}/>\n                    </div>\n                }\n                <div className=\"\n                flex flex-col justify-center items-center\n                mb-4\n                w-full\n                \">\n                    <label htmlFor=\"name\" className=\"self-start\">Channel Name</label>\n                    <input {...register(\"name\")} type=\"text\" placeholder=\"Channel Name\"\n                    autoFocus required className=\"\n                    rounded-md\n                    w-full\n                    \"/>\n                </div>\n                <div className=\"\n                flex flex-col justify-center items-center\n                mb-4\n                w-full\n                \">\n                    <label htmlFor=\"user_ids\" className=\"self-start\">Add People</label> \n                    <Controller\n                        name=\"user_ids\"\n                        isClearable\n                        control={control}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                options={allUsersOptions}\n                                isMulti\n                                isSearchable\n                                required\n                                placeholder=\"People to add\"\n                                className=\"w-full text-left\"\n                                // styles={}\n                            />\n                        )}\n                    />\n                </div>\n                <div className=\"\n                flex justify-end items-center\n                w-full\n                \">\n                    <button className=\"\n                    py-2 px-4 mt-2 rounded\n                    bg-blue-500 hover:bg-blue-700\n                    text-white font-bold\n                    \">\n                    Create\n                    </button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default CreateNewChannelForm","import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { API, StatesContext } from '../../App';\nimport { useState, useEffect, useContext } from 'react';\nimport { retrieveAllMessages } from './Chat'\n\nconst ChatBox = () => {\n  const {register, handleSubmit} = useForm();\n\n  const {\n    loginHeaders,\n    currentChatType,\n    currentChatId,\n    setAllMessages,\n  } = useContext(StatesContext);\n\n  // Collects messages from form // Done\n  const onSubmit = (data, e) => {\n    console.log(data);\n    e.target.reset();\n\n    let createdMessage = {\n      \"receiver_id\": currentChatId,\n      \"receiver_class\": currentChatType,\n      \"body\": data.message,\n    }\n\n    // POST messages to API server\n    axios({\n      method: 'POST',\n      url: `${API}//api/v1/messages`,\n      data: createdMessage, \n      headers: {\n        \"access-token\": loginHeaders['access-token'],\n        client: loginHeaders.client,\n        expiry: loginHeaders.expiry,\n        uid: loginHeaders.uid,\n      },\n    }).then((response) => {\n      // Refetch messages \n      retrieveAllMessages(loginHeaders, setAllMessages, currentChatId, currentChatType);\n    })\n  }\n\n\n  return (\n    <>\n      <div className='\n      flex justify-between items-center flex-none\n      h-16 p-4\n      border-t-2 border-lightgray-600 rounded-b-2xl\n      bg-gray-100'>\n        <form onSubmit={handleSubmit(onSubmit)} className='flex justify-between w-full'>\n          <input type=\"text\" autoComplete=\"off\" placeholder=\"Enter your message here\" name=\"message\" {...register('message')} className='w-full m-1 mb-2 py-2 px-3 border-gray-300 border-2 rounded-lg' />\n          <input type=\"submit\" className='max-w-max bg-purple-700 hover:bg-purple-800 text-white border-purple-700 border-2 rounded-lg m-1 mb-2 py-2 px-3 cursor-pointer' />\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default ChatBox\n","import axios from 'axios';\nimport React from 'react';\nimport { API, StatesContext } from '../../App';\nimport { useState, useEffect, useContext } from 'react';\nimport ChatBox from './ChatBox';\n\nexport const retrieveAllMessages = (\n  loginHeaders,\n  setAllMessages,\n  currentChatId,\n  currentChatType,\n) => {\n  axios({\n    method: 'GET',\n    url: `${API}/api/v1/messages?receiver_id=${currentChatId}&receiver_class=${currentChatType}`,\n    headers: {\n      \"access-token\": loginHeaders['access-token'],\n      client: loginHeaders.client,\n      expiry: loginHeaders.expiry,\n      uid: loginHeaders.uid,\n    },\n  }).then((response) => {\n    // console.log(response.data.data);\n    const retrieveMessages = response.data.data;\n    // Make a useState for retrieving messages \n    setAllMessages(retrieveMessages);\n  })\n  .catch((error) => {\n    console.error(error?.response?.data?.errors); \n  })\n}\n\nconst Chat = () => {\n  const {\n    loginHeaders,\n    allMessages,\n    setAllMessages,\n    currentChatType,\n    currentChatId,\n    currentChatName,\n    currentChatMembers,\n    setShowAddMemberForm,\n    loginUser\n  } = useContext(StatesContext);\n\n  return (\n    // Chat container\n    <div className='flex flex-col flex-grow ml-6 rounded-2xl shadow-inner bg-gray-50 h-full'>\n      {/* header */}\n      <div className='flex justify-between items-center flex-none border-b-2 border-lightgray-600 p-4 h-16'>\n        {/* channel name */}\n        <div>\n          <h4 className={`flex font-bold lowercase ${currentChatId === null || currentChatId === undefined ? \"capitalize\" : \"\"}`}>\n            {`${currentChatId === null || currentChatId === undefined ? \"No Channel/User Selected\" : currentChatName}`}\n          </h4>\n        </div>\n\n        {/* member info button */}\n        <div className=\"\n        flex justify-center align-center\n        \">\n          {currentChatType === \"Channel\" &&\n            <button type=\"button\" onClick={() => setShowAddMemberForm(true)} className=\"\n            flex justify-between align-center\n            border-gray-300 border-2 hover:bg-gray-200 rounded-lg\n            w-32 px-2\n            text-center text-gray-500 font-semibold\n            \">\n              <p className=\"\">Members</p>\n              <p className=\"text-gray-300 font-normal\">|</p>\n              <p>{currentChatMembers.length}</p>\n            </button>\n          }\n        </div>\n      </div>\n\n      {/*List out all the messages */}\n      <div className='flex flex-col flex-grow p-4 overflow-y-auto'>\n        { currentChatId !== null && currentChatId !== undefined && allMessages !== undefined && allMessages.length > 0 &&\n          allMessages.map((message, index) => (\n            <div key={index} className={`flex flex-col mb-2 ${message.sender.id === loginUser.id ? 'self-end' : 'self-start'}`}>\n              { message.sender.id !== loginUser.id &&\n                <p className='text-sm self-start ml-1'> {message.sender.uid.replaceAll(\"@gmail.com\", \"\").replaceAll(\"@yahoo.com\", \"\")} </p>\n              } \n              <p className={`${message.sender.id === loginUser.id ? 'self-end bg-purple-300' : 'bg-gray-200'} mt-1 mb-2 py-2 px-3 max-w-max rounded-lg self-start`}> {message.body}</p>\n            </div>\n            ))\n        }\n        {/* default message */}\n        { currentChatId !== null && currentChatId !== undefined && allMessages !== undefined && allMessages.length === 0 &&\n          <p>No message history.</p>\n        }\n        {/* default message */}\n        { currentChatId === null || currentChatId === undefined &&\n          <p className='justify-self-end self-center'>Select a channel or user to chat with.</p>\n        }\n      </div>\n\n      {/* Chat box component */}\n      { currentChatId !== null && <ChatBox /> }\n    </div>\n  );\n};\n\nexport default Chat;\n","export default __webpack_public_path__ + \"static/media/default_dp.b042d8fa.png\";","import React, { useContext } from 'react';\nimport { StatesContext } from '../../App';\nimport DefaultPhoto from '../../assets/default_dp.png'\n\nconst UserProfile = () => {\n    const { loginUser } = useContext(StatesContext);\n\n    return (\n        <>\n            <div className=\"\n            flex flex-col items-center justify-center flex-grow-0\n            bg-gray-100\n            rounded-2xl shadow-inner\n            py-5 h-52\">\n                <img className=\"\n                rounded-full object-fit h-full\n                \"src={DefaultPhoto} alt=\"user image\" />\n                <div className=\"font-semibold\"> {loginUser.uid}</div>\n            </div>\n        </>\n    )\n}\n\nexport default UserProfile;\n\n","import React, { useState, useContext, useEffect } from 'react';\nimport Modal from '../common/Modal';\nimport ErrorDisplay from '../common/ErrorDisplay';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport { API, StatesContext } from '../../App';\nimport {getAllChannels, getAllChannelsDetails } from '../userDashboard/UserDashboard'\n\n// TODO: change style of react-select selector\nconst searchMember = (allUsers, id) => {\n    let memberDetails = allUsers.filter((user) => user.id === id);\n    return memberDetails[0];\n}\n\nconst AddMemberForm = () => {\n    const { register, handleSubmit, control } = useForm();\n    const [errors, setErrors] = useState([]);\n    const [options, setOptions] = useState([]);\n\n    const { \n        loginHeaders,\n        allUsers,\n        setShowAddMemberForm,\n        currentChatId,\n        currentChatMembers,\n        currentChatName,\n        setAllChannels,\n        setAllChannelsDetails,\n    } = useContext(StatesContext);\n    \n    const onSubmit = (data) => {\n        if(data.user_id?.label !== undefined && data.user_id?.value !== undefined) {\n            let errorList = [];\n        \n            // create request obj\n            let memberToAdd = {\n                id: currentChatId,\n                member_id: data.user_id.value,\n            }\n            \n            // POST to server\n            axios({\n                method: \"POST\",\n                url: `${API}/api/v1/channel/add_member`,\n                data: memberToAdd,\n                headers: {\n                    \"access-token\": loginHeaders[\"access-token\"],\n                    client: loginHeaders.client,\n                    expiry: loginHeaders.expiry,\n                    uid: loginHeaders.uid,\n                },\n            }).then((response) => {\n                // console.log(response.data.data); // ! TEMP\n            }).catch((error) => {\n                console.error(error.response.data.errors); // ! TEMP\n                errorList.push(...error.response.data.errors);\n                setErrors(errorList);\n            }).then(() => {\n                if (errorList.length === 0) {\n                    // ! TEMP: alert (turn into nicer alerts)\n                    alert(\"User added to channel!\");\n\n                    // TODO: re-get allChannels and alLChannelsDetails\n                    getAllChannels(loginHeaders, setAllChannels, getAllChannelsDetails, setAllChannelsDetails)\n\n                    // close modal\n                    setShowAddMemberForm(false);\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        // preprocessing form inputs\n        let allUsersOptions = allUsers.map((indivUser) => {\n            return {\n                value: indivUser.id,\n                label: `${indivUser.uid}`,\n            }\n        })\n        // filter out existing members of the channel\n        allUsersOptions = allUsersOptions.filter((indivUser) => !currentChatMembers.includes(indivUser.value));\n        setOptions(allUsersOptions);\n    }, [currentChatMembers])\n    \n\n    // render\n    return (\n        <Modal setShowModal={setShowAddMemberForm}>\n            <form onSubmit={handleSubmit(onSubmit)} tabIndex=\"-1\" className=\"\n            py-4 px-6\n            border-gray-150 border-2 rounded-lg\n            transition duration-200\n            bg-white\n            w-96 lg:w-4/12\n            \">\n                <h1 className=\"\n                self-start text-left\n                text-2xl font-bold\n                mb-4\n                \">\n                    {`${currentChatName} members`}\n                </h1>\n                {errors.length>0 &&\n                    <div className=\"\n                    flex flex-col justify-center items-center\n                    w-full mb-4\n                    \">\n                        <ErrorDisplay errors={errors}/>\n                    </div>\n                }\n                <div className=\"\n                flex flex-col justify-center items-center\n                mb-4\n                w-full\n                \">\n                    <label htmlFor=\"user_id\" className=\"self-start\">Add people</label> \n                    <Controller\n                        name=\"user_id\"\n                        isClearable\n                        control={control}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                options={options}\n                                isSearchable\n                                required\n                                placeholder=\"Person to add\"\n                                className=\"w-full text-left\"\n                                // styles={}\n                            />\n                        )}\n                    />\n                </div>\n                \n                {/* List of Members */}\n                <div className=\"\n                flex flex-col\n                \">\n                    <h2 className=\"self-start\">Current members</h2>\n                    <ul className=\"\n                    flex flex-col justify-start items-center\n                    mb-4\n                    border-2 rounded-lg h-72 w-full\n                    overflow-y-auto\t\n                    \">\n                        {currentChatMembers !== undefined &&\n                            currentChatMembers.map((memberId, index) => {\n                                let memberDetails = searchMember(allUsers, memberId)\n                                return (\n                                    <li key={index} className=\"\n                                    border-b-2\n                                    hover:bg-gray-50\n                                    flex justify-center items-center\n                                    w-full h-10 p-2\n                                    \">\n                                        {memberDetails.uid}\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n\n                <div className=\"\n                flex justify-end items-center\n                w-full\n                \">\n                    <button className=\"\n                    py-2 px-4 mt-2 rounded\n                    bg-blue-500 hover:bg-blue-700\n                    text-white font-bold\n                    \">\n                    Add\n                    </button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AddMemberForm;","import React, { useState, useContext, useEffect } from 'react';\nimport Select from 'react-select';\nimport { API, StatesContext } from '../../App';\n\nconst AddDirectMessage = () => {\n    const { \n        loginUser,\n        allUsers, \n        currentChatId,\n        setCurrentChatId,\n        currentChatType,\n        setCurrentChatType,\n        currentChatName,\n        setCurrentChatName,\n        setCurrentChatMembers,\n    } = useContext(StatesContext);\n\n    const [answer, setAnswer] = useState([])\n    \n    let allUsersOptions = allUsers.map((indivUser) => {\n        return {\n            value: indivUser.id,\n            label: `${indivUser.uid}`,\n        }\n    })\n\n    useEffect(() => {\n        setCurrentChatType(\"User\")\n        setCurrentChatId(answer.value)\n        setCurrentChatName(answer.label)\n        setCurrentChatMembers([])\n    }, [answer])\n\n    return (\n        <form className=\"\n        flex flex-col items-center justify-center flex-grow-0\n        h-20 mt-2\n        \">\n            <h1 className=\"\n            font-semibold text-lg self-start\n            \">\n                Direct Messages\n            </h1>\n            <div className=\"\n            flex flex-col justify-center items-center\n            w-full\n            \">\n                <Select\n                    options={allUsersOptions}\n                    isSearchable\n                    required\n                    placeholder=\"Select from this list\"\n                    className=\"w-full text-left\"\n                    menuPlacement=\"auto\"\n                    onChange={setAnswer}\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default AddDirectMessage;","import axios from 'axios';\nimport { API, StatesContext } from '../../App';\nimport { useState, useEffect, useContext } from 'react';\nimport SideBarList from './SideBarList';\nimport CreateNewChannelForm from './CreateNewChannelForm';\nimport Chat from './Chat';\nimport UserProfile from './UserProfile';\nimport AddMemberForm from './AddMemberForm';\nimport AddDirectMessage from './AddDirectMessage';\nimport { retrieveAllMessages } from './Chat';\n\nexport const getAllChannels = (loginHeaders, setAllChannels, getAllChannelsDetails, setAllChannelsDetails) => {\n  axios({\n    method: 'GET',\n    url: `${API}/api/v1/channels`,\n    headers: {\n      \"access-token\": loginHeaders[\"access-token\"],\n      client: loginHeaders.client,\n      expiry: loginHeaders.expiry,\n      uid: loginHeaders.uid,\n    },\n  }).then((response) => {\n    const allAvailableChannels = (response.data.data);\n    setAllChannels(allAvailableChannels);\n    return allAvailableChannels;\n  }).then((channelData) => {\n    if (channelData) {\n      getAllChannelsDetails(channelData, loginHeaders, setAllChannelsDetails);\n    } else {\n      setAllChannelsDetails([]);\n    }\n  }).catch((error) => {\n    console.error(error?.response?.data?.errors);\n  })\n}\n\nexport const getAllChannelsDetails = (allAvailableChannels, loginHeaders, setAllChannelsDetails) => {\n  let channelDetailsList  = [];\n  allAvailableChannels.forEach(channel => {\n    axios({\n      method: 'GET',\n      url: `${API}/api/v1/channels/${channel.id}`,\n      headers: {\n        \"access-token\": loginHeaders[\"access-token\"],\n        client: loginHeaders.client,\n        expiry: loginHeaders.expiry,\n        uid: loginHeaders.uid,\n      },\n    }).then((response) => {\n      channelDetailsList.push(response.data.data);\n      setAllChannelsDetails(channelDetailsList);\n    }).catch((error) => {\n      console.log(error);\n      console.error(error?.response?.data?.errors);\n    })\n  })\n}\n\nconst UserDashboard = () => {\n  const {\n    loginHeaders,\n    allUsers,\n    setAllUsers,\n    allChannels,\n    setAllChannels,\n    showCreateChannelForm,\n    showAddMemberForm,\n    allChannelsDetails,\n    setAllChannelsDetails,\n    setAllMessages,\n    currentChatId,\n    currentChatType,\n    setCurrentChatMembers,\n  } = useContext(StatesContext);\n\n  const getAlluserData = () => {\n    // GET all users\n    axios({\n      method: 'GET',\n      url: `${API}/api/v1/users`,\n      headers: {\n        'access-token': loginHeaders['access-token'],\n        client: loginHeaders.client,\n        // client: \"mikyle\",\n        expiry: loginHeaders.expiry,\n        uid: loginHeaders.uid,\n      },\n    })\n      .then((response) => {\n        // console.log(response.data.data) // ! TEMP\n        setAllUsers(response.data.data);\n        \n      })\n      .catch((error) => {\n        console.error(error.response.data.errors); // ! TEMP\n      })\n      .then(() => {\n        // handle errors\n      });\n  };\n\n  useEffect(() => {\n      getAllChannels(loginHeaders, setAllChannels, getAllChannelsDetails, setAllChannelsDetails);\n      getAlluserData();\n  }, [])\n\n  useEffect(() => {\n    retrieveAllMessages(loginHeaders, setAllMessages, currentChatId, currentChatType);\n  }, [currentChatId])\n\n  // useEffect(() => {\n  //   let thisChannelDetails = allChannelsDetails.filter(channel => channel.id === currentChatId)[0];\n  //   if (thisChannelDetails?.channel_members !== undefined) {\n  //     let thisChannelMembers = thisChannelDetails.channel_members.map(memberObj => memberObj.user_id);\n  //     setCurrentChatMembers(thisChannelMembers);\n  //   }\n  // }, [allChannelsDetails])\n\n  // TODO: find out less hacky way to do this\n  useEffect(() => {\n    setTimeout(() => {\n      let thisChannelDetails = allChannelsDetails.filter(channel => channel.id === currentChatId)[0];\n      if (thisChannelDetails?.channel_members !== undefined) {\n        let thisChannelMembers = thisChannelDetails.channel_members.map(memberObj => memberObj.user_id);\n        setCurrentChatMembers(thisChannelMembers);\n      }\n    }, 1000)\n  }, [allChannelsDetails])\n\n\n  return (\n    <>\n      {/* background */}\n      <div className='\n      py-6 bg-gradient-to-b from-purple-300 to-purple-500\n      flex items-center justify-center\n      w-full h-screen\n      border-box\n      '>\n        {/* card */}\n        <div\n        className='\n        flex justify-center\n        bg-white rounded-lg shadow-lg\n        py-10 px-6\n        w-4/5 h-full \n        '>\n          {/* sidebar */}\n          <div className=\"\n          flex flex-col justify-between\n          w-56 h-full\n          \">\n            <UserProfile />\n            <SideBarList />\n            {/* <div className=\"flex-grow border-8 overflow-y-auto\">\n              <div className=\"text-9xl\">X</div>\n              <div className=\"text-9xl\">X</div>\n              <div className=\"text-9xl\">X</div>\n            </div> */}\n            {allUsers.length > 0 && <AddDirectMessage  />}\n          </div>\n          {/* chat box */}\n          <Chat />\n        </div>\n      </div>\n\n      {/* Modals */}\n      <div >\n        {showCreateChannelForm && allUsers.length > 0 && <CreateNewChannelForm />}\n      </div>\n      <div>\n        {showAddMemberForm && allUsers.length > 0 && <AddMemberForm />}\n      </div>\n    </>\n  );\n};\n\nexport default UserDashboard;","import Login from './components/login/Login';\nimport Signup from './components/login/Signup';\nimport UserDashboard from './components/userDashboard/UserDashboard';\nimport React, { useState } from 'react';\n\nexport const API = 'http://206.189.91.54';\nexport const StatesContext = React.createContext();\n\nfunction App() {\n  const [isOpenLoginPage, setIsOpenLoginPage] = useState(true);\n  const [isOpenSignUpPage, setIsOpenSignUpPage] = useState(false);\n  const [isOpenUserDashboard, setIsOpenUserDashboard] = useState(false);\n  const [loginHeaders, setLoginHeaders] = useState({});\n  const [loginUser, setLoginUser] = useState({});\n  const [allUsers, setAllUsers] = useState({});\n  const [allChannels, setAllChannels] = useState({});\n  const [allChannelsDetails, setAllChannelsDetails] = useState([]);\n  const [showCreateChannelForm, setShowCreateChannelForm] = useState(false);\n  const [showAddMemberForm, setShowAddMemberForm] = useState(false);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [currentChatType, setCurrentChatType] = useState(null);\n  const [currentChatName, setCurrentChatName] = useState(null);\n  const [currentChatMembers, setCurrentChatMembers] = useState([]);\n  const [allMessages, setAllMessages] = useState([]);\n\n\n  const openPage = (page) => {\n    setIsOpenLoginPage(page===\"login\" ? true : false);\n    setIsOpenSignUpPage(page===\"signup\" ? true : false);\n    setIsOpenUserDashboard(page===\"dashboard\" ? true : false);\n  }\n\n\n  return <>\n    <StatesContext.Provider value={{\n      openPage,\n      isOpenLoginPage,\n      setIsOpenLoginPage,\n      isOpenSignUpPage,\n      setIsOpenSignUpPage,\n      isOpenUserDashboard,\n      setIsOpenUserDashboard,\n      loginHeaders,\n      setLoginHeaders,\n      loginUser,\n      setLoginUser,\n      allUsers,\n      setAllUsers,\n      allChannels,\n      setAllChannels,\n      allChannelsDetails,\n      setAllChannelsDetails,\n      showCreateChannelForm,\n      setShowCreateChannelForm,\n      showAddMemberForm,\n      setShowAddMemberForm,\n      currentChatId,\n      setCurrentChatId,\n      currentChatType,\n      setCurrentChatType,\n      currentChatName,\n      setCurrentChatName,\n      allMessages,\n      setAllMessages,\n      currentChatMembers,\n      setCurrentChatMembers,\n    }}>\n      <div>\n        {isOpenLoginPage && <Login/>}\n        {isOpenUserDashboard && <UserDashboard/>}\n        {isOpenSignUpPage && <Signup/>}\n\n      </div>\n    </StatesContext.Provider>\n  </>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}